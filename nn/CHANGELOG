v. 2.0.9,  19 July 2024
        -- Made str2double() static everywhere.
v. 2.0.8,  22 March 2024
        -- Corrected lpi_build() to improve handling of nearly singular cases
           when y12 is nearly 0.
v. 2.0.7,  13 January 2022
        -- Removed redundant field "edges" from struct delaunay. Replaced
           tio_init() by memsetting to 0.
v. 2.0.6,  20 July 2021
        -- Got rid of redundant delaunay_getmemsize() in delaynay.c.
v. 2.0.5,  11 May 2021
	-- Added 2nd parallelisation algorithm to nnbathy.c, activated by
	   -DVIAFILE.
v. 2.0.4,  7 May 2021
	-- A minor correction of #if defined for NMAX in nnbathy.c.
	-- Reduced MPIBUFSIZE in nnbathy.c from 4096 to 1024. This has a
	   marginal effect, but seems to work better for larger number of CPUs.
v. 2.0.3,  7 May 2021
	-- Tuned a bit the distribution of load in the MPI version of nnbathy.
	   Now the master interpolates if the number of CPUs <= 3; otherwise it
	   only collects and writes the results.
v. 2.0.2,  7 May 2021
	-- Corrected defect in MPI section of nnbathy.c.
v. 2.0.1,  5 May 2021
	-- Added fflush() to points_write(), which seems to be the problem with
	   large number of CPUs.
v. 2.0.0,  5 May 2021
	-- Quite a few structural changes. Split `struct delaunay' into
	   `struct delaunay' and `struct dsearch'.
	-- Put some MPI code into delaunay.c and nnbathy.c. See README and
	   examples/2/README for details. It targets (but not limited to) very
           large datasets. In particular, it puts the triangulation into shared
	   memory. This shared memory functionality of MPI3 can be stripped by
	   compiling without -DUSE_SHMEM.
v. 1.86.2, 8 June 2017
        -- Minor portability realated changes in hash.[ch]
	-- A minor change in makefile
v. 1.86.1, 24 November 2016
        -- Some internal changes in hash.c.
v. 1.86.0, 14 March 2016
        -- A minor modification in an attempt to alleviate a potential
           exception in the degenerate case. Not thoroughly tested yet.
v. 1.85.1, 25 Sep 2015
        -- Replaced points_generate2() by points_generate(), seems to work.
           This eliminates compilation error for target "tests" -- thanks to
           @ocefpaf for the report.
v. 1.85, 1 May 2012
        -- A change in nan.h to distinguish between gcc and icc
v. 1.84, 25 January 2012
        -- Cosmetic: modified descriptions of nnai and nnhpi.
v. 1.83, 19 January 2012
        -- A cosmetic change to avoid compiler warning for delaunay.c
        -- Another cosmetic change - updated the list of structure names to be
           recognised by `indent' when running "make indent"
v. 1.82, 12 May 2010
        -- Modified "configure" to check whether compiler option
           "-fno-force-mem" is supported.
v. 1.81, 29 May 2009
        -- Added flag NN_SERIAL to the default compiler options for building
           nnbathy.
v. 1.80, 12 December 2008
        -- Changed the license for compatibility with GPL. Added the file
           LICENSE.
v. 1.79, 24 September 2008
        -- Fixed some minor deficiencies in `minell' - thanks to Glen Low for
           the bug report and extensive testing. This fix does not affect
           performance of `nn'.
v. 1.78, 18 January 2008
	-- Modified Matlab code in the examples to take care of what seems to
           be a new behaviour of RANGE function.
v. 1.77, 19 November 2007
        -- Reduced writing the % of the job completed to stderr to the instances
           when the reported value has actually changed (with the precision of
           0.1%).
v. 1.76, 16 November 2007
        -- Fixed a defect in nnpi_calculate_weights() that caused double
           deallocation in some rare cases (a degenerate point on the convex
           hall). Thanks for Maciek Sieczka for reporting this bug.
v. 1.75, 30 October 2007
        -- Modified delaunay_circles_find() and nnpi_reset(). Got rid of the
           non-scalable stuff that slowed down processing of big datasets.
           Many thanks to John Gerschwitz, Petroleum Geo-Services, for finding
           this defect.
v. 1.74, 30 October 2007
        -- Modified treatment of degenerate cases in nnpi_triangle_process(),
           many thanks to John Gerschwitz, Petroleum Geo-Services, for exposing
           the defect introduced in v. 1.69. Changed EPS_SAME from 1.0e-15 to
           1.0e-8. A number of cosmetic changes.
v. 1.73, 5 July 2007
        -- Removed functional code from within assert()s, which caused problems
           for production builds on Visual Studio. Thanks to Alok Saldanha for
           reporting this defect.
v. 1.72, 4 July 2007
        -- Moved division by "denom" in circle_build2() and circle_build1() to
           after the check on denom == 0; otherwise division on 0 raised
           exception on some systems. Thanks to Alok Saldanha for reporting this
           bug.
v. 1.71, 17 January 2007
	-- Made the test on whether an output point exactly coincides with
           an input point in nnpi_triangle_process() approximate.
v. 1.70, 24 November 2006
        -- Added example 6.
v. 1.69, 22 November 2006
	-- Substantial changes in processing of the degenerate case for Sibson
           interpolation. This is the case when an interpolation point is close
           to being in between data points. It is no longer handled by a pair
           of symmetric displacements of this point; instead, the center of the
           corresponding circumcircle is moved elsewhere in a specific way.
v. 1.68, 28 September 2006
        -- Edited README
v. 1.67, 30 August 2006
        -- Introduced -% option (available only when built with -DNN_SERIAL)
v. 1.66, 26 June 2006
	-- Introduced this file
	-- Fixed error in reading the command-line input after "-L"
        -- Made a few cosmetic changes
